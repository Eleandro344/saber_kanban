{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elean\\\\saber_kanban\\\\frontend\\\\src\\\\pages\\\\kanban.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/kanban.css'; // vamos criar depois\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst kabnan = () => {\n  _s();\n  const [tarefas, setTarefas] = useState([{\n    id: 1,\n    titulo: 'Estudar React',\n    concluida: false\n  }, {\n    id: 2,\n    titulo: 'Criar API com Django',\n    concluida: true\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"agenda-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"\\uD83D\\uDCC5 Kanban\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: tarefas.map(tarefa => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `list-group-item d-flex justify-content-between align-items-center ${tarefa.concluida ? 'list-group-item-success' : ''}`,\n        children: [tarefa.titulo, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: tarefa.concluida ? 'âœ…' : 'ðŸ•’'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, tarefa.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(kabnan, \"PfiAP1IBOJHh5Fbaoa/AeJSbEZQ=\");\nexport default kanban;","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","kabnan","_s","tarefas","setTarefas","id","titulo","concluida","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tarefa","kanban"],"sources":["C:/Users/elean/saber_kanban/frontend/src/pages/kanban.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/kanban.css'; // vamos criar depois\r\n\r\nconst kabnan = () => {\r\n  const [tarefas, setTarefas] = useState([\r\n    { id: 1, titulo: 'Estudar React', concluida: false },\r\n    { id: 2, titulo: 'Criar API com Django', concluida: true }\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"agenda-page\">\r\n      <h2 className=\"mb-4\">ðŸ“… Kanban</h2>\r\n      <ul className=\"list-group\">\r\n        {tarefas.map((tarefa) => (\r\n          <li\r\n            key={tarefa.id}\r\n            className={`list-group-item d-flex justify-content-between align-items-center ${tarefa.concluida ? 'list-group-item-success' : ''}`}\r\n          >\r\n            {tarefa.titulo}\r\n            <span>{tarefa.concluida ? 'âœ…' : 'ðŸ•’'}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default kanban;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,CACrC;IAAEO,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,eAAe;IAAEC,SAAS,EAAE;EAAM,CAAC,EACpD;IAAEF,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,sBAAsB;IAAEC,SAAS,EAAE;EAAK,CAAC,CAC3D,CAAC;EAEF,oBACEP,OAAA;IAAKQ,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BT,OAAA;MAAIQ,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCb,OAAA;MAAIQ,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvBN,OAAO,CAACW,GAAG,CAAEC,MAAM,iBAClBf,OAAA;QAEEQ,SAAS,EAAE,qEAAqEO,MAAM,CAACR,SAAS,GAAG,yBAAyB,GAAG,EAAE,EAAG;QAAAE,QAAA,GAEnIM,MAAM,CAACT,MAAM,eACdN,OAAA;UAAAS,QAAA,EAAOM,MAAM,CAACR,SAAS,GAAG,GAAG,GAAG;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAJvCE,MAAM,CAACV,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACX,EAAA,CAtBID,MAAM;AAwBZ,eAAee,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}